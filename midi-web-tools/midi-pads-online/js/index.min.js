var drumController;var drumControllerLayout;var drumControllerSettingsLayout;var drumControllerPadSettingsLayout;
var myMidiAccessApi;var sendToLocalSynth=true;jQuery(document).ready(function(){createDefaultProject();
loadJsonUrlDrumController("./catalog/easy.json");drumControllerLayout=new jqueryMusicMidiDrumControllerLayout({id:"drumPadsLayout",drumController:drumController,onPadMouseDown:function(c,a,b){handlePad(c,a,"noteOn")
},onPadMouseUp:function(c,a,b){handlePad(c,a,"noteOff")},noteEditClickCallback:function(b,a){showPadSettingsLayout(b,a)
}});drumControllerSettingsLayout=new jqueryMusicMidiDrumControllerSettingsLayout({id:"settingsLayout",drumController:drumController,onRowsChange:function(a){drumController.setRows(a);
drumControllerLayout.setDrumController(drumController,false,false)},onColumnsChange:function(a){drumController.setColumns(a);
drumControllerLayout.setDrumController(drumController,false,false)}});drumControllerPadSettingsLayout=new jqueryMusicMidiDrumControllerPadSettingsLayout({id:"padSettingsLayout",drumController:drumController,onAddPadEvent:function(c,a){var b=drumController.getPad(c,a);
b.addEvent();drumControllerPadSettingsLayout.initNotesLayout();drumControllerLayout.refreshPadState(c,a)
},onDeletePadEvent:function(d,b,a){var c=drumController.getPad(d,b);c.deleteEvent(a);
drumControllerPadSettingsLayout.initNotesLayout();drumControllerLayout.refreshPadState(d,b)
},onPadEventChannelChange:function(f,b,a,c){console.log("index drumControllerPadSettingsLayout onPadEventChannelChange() rowIndex: "+f+", columnIndex: "+b+", eventIndex: "+a+", channel: "+c);
var d=drumController.getPad(f,b);var e=d.getEvent(a);if(e!=null){e.setChannel(c)}},onPadNoteValueChange:function(f,c,b,a){console.log("index drumControllerPadSettingsLayout onPadNoteValueChange() rowIndex: "+f+", columnIndex: "+c+", eventIndex: "+b+", noteValue: "+a);
var d=drumController.getPad(f,c);var e=d.getEvent(b);if(e!=null){e.setNoteValue(a)
}drumControllerLayout.refreshPadState(f,c)},onPadNoteVelocityChange:function(f,c,b,e){console.log("index drumControllerPadSettingsLayout onPadNoteVelocityChange() rowIndex: "+f+", columnIndex: "+c+", eventIndex: "+b+", noteVelocity: "+e);
var d=drumController.getPad(f,c);var a=d.getEvent(b);if(a!=null){a.setNoteVelocity(e)
}}});myMidiAccessApi=new jMidiAccessApi({initCallback:function(a){jQuery("#midiNotSupported").css("display",a.midiSupported?"none":"block");
if(a.midiSupported){devicesChanged(a)}},onRequestMidiAccessSuccess:function(a){jQuery("#requestMidiAccessSuccess").css("display","inline-block");
jQuery("#requestMidiAccessSuccess").delay(3000).fadeOut();if(a.midiSupported){if(a.midiAccess!=null&&a.midiAccess.outputs!=null){if(typeof a.midiAccess.outputs[Symbol.iterator]==="function"){a.midiAccess.outputs.forEach(function(c,b){myMidiAccessApi.connectOutputPortByName(c.name)
})}}devicesChanged(a)}},onRequestMIDIAccessFailure:function(){jQuery("#requestMIDIAccessFailure").css("display","inline-block");
jQuery("#requestMIDIAccessFailure").delay(3000).fadeOut()},deviceStateChangeCallback:function(a,b){devicesChanged(b)
},portConnectedCallback:function(a,b){devicesChanged(b)},portDisconnectedCallback:function(a,b){devicesChanged(b)
},receiveCallback:function(a){myMidiAccessApi.send(a)}});jQuery("#buttonStart").click(function(){myMidiClockPlayer.start()
});jQuery("#buttonContinue").click(function(){myMidiClockPlayer.continue_()});jQuery("#buttonStop").click(function(){myMidiClockPlayer.stop()
});jQuery("#bpmRange").on("input",function(){jQuery(this).trigger("change")});jQuery("#bpmRange").change(function(){myMidiClockPlayer.setBpm(jQuery(this).val()*2)
});$(window).keypress(function(a){if(a.which===32){if(myMidiClock.isStarted()){myMidiClockPlayer.stop()
}else{myMidiClockPlayer.continue_()}}else{if(a.which===13){if(myMidiClock.isStarted()){myMidiClockPlayer.stop()
}else{myMidiClockPlayer.start()}}else{if(a.which===43){myMidiClockPlayer.setBpm(myMidiClockPlayer.getBpm()+1)
}else{if(a.which===45){myMidiClockPlayer.setBpm(myMidiClockPlayer.getBpm()-1)}else{if(a.which===49){handlePad(2,0,"noteOn")
}else{if(a.which===50){handlePad(2,1,"noteOn")}else{if(a.which===51){handlePad(2,2,"noteOn")
}else{if(a.which===52){handlePad(1,0,"noteOn")}else{if(a.which===53){handlePad(1,1,"noteOn")
}else{if(a.which===54){handlePad(1,2,"noteOn")}else{if(a.which===55){handlePad(0,0,"noteOn")
}else{if(a.which===56){handlePad(0,1,"noteOn")}else{if(a.which===57){handlePad(0,2,"noteOn")
}else{if(a.which===101){togglePadSettingsPanel()}}}}}}}}}}}}}}});jQuery("#newProjectButton").click(function(){createDefaultProject()
});jQuery("#catalogButton").click(function(){loadCatalogLayout()});jQuery("#clearButton").click(function(){drumController.clearNotes()
});jQuery("#serializeButton").click(function(){download("the_file.json",drumController.serialize())
});jQuery(".toggleMidiPanelButton").click(function(){jQuery("#midiPanel").slideToggle()
});jQuery(".togglePadSettingsPanel").click(function(){togglePadSettingsPanel()});
jQuery(".toggleControlerSettingsPanelButton").click(function(){jQuery("#controlerSettingsPanel").slideToggle()
});jQuery(".toogleOpenFilePanel").click(function(){jQuery("#openFilePanel").slideToggle()
});setupCatalogLayout()});function devicesChanged(a){listMidiInputDevices(a.midiAccess);
listMidiOutputDevices(a.midiAccess)}function listMidiInputDevices(a){var b=jQuery("#midiInputs");
b.html("");if(a!=null&&a.inputs!=null){a.inputs.forEach(function(c,e){var d="";d+=""+(c.onmidimessage?"<span class='fa fa-check text-success'></span>":"<span class='fa fa-plug'></span>")+" ";
d+=c.name;d+=" <small>("+c.id+")</small>";b.append(jQuery("<button/>",{inputPortName:c.name,portConnected:c.onmidimessage?1:0,"class":"list-group-item  list-group-item-action"}).append(jQuery("<div/>",{}).html(d)).click(function(){var f=jQuery(this).attr("inputPortName");
if(parseInt(jQuery(this).attr("portConnected"))){myMidiAccessApi.unbindInputPortByName(f)
}else{myMidiAccessApi.bindInputPortByName(f)}}))})}}function listMidiOutputDevices(a){var b=jQuery("#midiOutputs");
b.html("");if(a!=null&&a.outputs!=null){if(typeof a.outputs[Symbol.iterator]==="function"){a.outputs.forEach(function(e,d){var c="";
c+=""+(myMidiAccessApi.isOutputConnectedById(e.id)?"<span class='fa fa-check text-success'></span>":"<span class='fa fa-plug'></span>")+" ";
c+=e.name;c+=" <small>("+e.id+")</small>";b.append(jQuery("<button/>",{"class":"list-group-item list-group-item-action",outputPortName:e.name,portConnected:myMidiAccessApi.isOutputConnectedById(e.id)?1:0}).html(c).click(function(){var f=jQuery(this).attr("outputPortName");
if(parseInt(jQuery(this).attr("portConnected"))){myMidiAccessApi.disconnectOutputPortByName(f)
}else{myMidiAccessApi.connectOutputPortByName(f)}}))})}}}function download(a,c){var b=document.createElement("a");
b.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(c));b.setAttribute("download",a);
b.style.display="none";document.body.appendChild(b);b.click();document.body.removeChild(b)
}function setupCatalogLayout(){jQuery("#catalogLayout").click(function(){jQuery(this).css("display","none")
});jQuery("#catalogLayout > *").click(function(){return false})}function loadCatalogLayout(){var b=jQuery("#catalogLayout");
b.css("display","block");var a=jQuery("#catalogProjectsLayout");a.html("");$.ajax({url:"./catalog/catalog.json",dataType:"json",cache:false,success:function(c){c.projects.forEach(function(e,d){a.append(jQuery("<button/>",{"class":"list-group-item list-group-item-action",filename:e.filename}).html(e.name).click(function(){var f=jQuery(this).attr("filename");
loadJsonUrlDrumController("./catalog/"+f)}))})}})}function createDefaultProject(){drumController=new jqueryMusicMidiDrumController();
drumControllerLoaded()}function loadJsonStringDrumController(b){var a=JSON.parse(b);
var c=new jqueryMusicMidiDrumController();drumController=Object.assign(c,a);drumControllerLoaded()
}function drumControllerLoaded(){drumController.fixDeserialize();addDrumControllerListeners();
if(drumControllerLayout!=null){drumControllerLayout.setDrumController(drumController,true,true)
}if(drumControllerSettingsLayout!=null){drumControllerSettingsLayout.setDrumController(drumController,true,true)
}if(drumControllerPadSettingsLayout!=null){drumControllerPadSettingsLayout.setDrumController(drumController,true,true)
}}function loadJsonUrlDrumController(a){jQuery.ajax({url:a,dataType:"text",cache:false,success:function(b){loadJsonStringDrumController(b)
}})}function addDrumControllerListeners(){drumController.setCallbackValuesChanged(function(a){console.log("index callbackValuesChanged vars: "+a)
})}$("#jsonInputFile").on("change",function(){var a=new FileReader();a.onload=function(){var b=a.result;
loadJsonStringDrumController(b)};a.readAsText($("#jsonInputFile").prop("files")[0])
});function showPadSettingsLayout(b,a){drumControllerPadSettingsLayout.setRowColumnIndex(b,a);
if(jQuery("#padSettingsPanel").css("display")=="none"){jQuery("#padSettingsPanel").slideToggle()
}}function togglePadSettingsPanel(){drumControllerLayout.setEditMode(!drumControllerLayout.getEditMode());
jQuery("#padSettingsPanel").slideToggle()}function handlePad(f,d,c){var e=drumController.getPad(f,d);
for(var b=0;b<e.getEventsCount();b++){var a=e.getEvent(b);if(a.getType()==jqueryMusicMidiDrumControllerPadEvent.TYPE_NOTE){if(c=="noteOn"){myMidiAccessApi.send({receivedTime:window.performance.now(),data:[144+(0+a.getChannel()),0+a.getNoteValue(),0+a.getNoteVelocity()]})
}else{if(c=="noteOff"){myMidiAccessApi.send({receivedTime:window.performance.now(),data:[128+(0+a.getChannel()),0+a.getNoteValue(),0]})
}}}}};
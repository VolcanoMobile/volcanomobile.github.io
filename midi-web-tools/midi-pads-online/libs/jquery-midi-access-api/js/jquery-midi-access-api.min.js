/* Copyright (C) Volcanomobile, Inc - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Volcanomobile <contact@volcanomobile.net>, January 2020
 */ 
 
 var jMidiAccessApi=function(e){var i={midiSupported:!1,midiAccess:null,outputPorts:[],initCallback:null,onRequestMidiAccessSuccess:null,onRequestMIDIAccessFailure:null,deviceStateChangeCallback:null,portDisconnectedCallback:null,portConnectedCallback:null,receiveCallback:null,sendCallback:null,logLevel:jMidiAccessApi.LOG_LEVEL_ERROR},t=this,s=[];this.construct=function(e){$.extend(i,e),this.initMidi()},this.initMidi=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Init MIDI"),navigator.requestMIDIAccess?(i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - MIDI supported"),i.midiSupported=!0,navigator.requestMIDIAccess({sysex:!0}).then(this.requestMIDIAccessSuccess,this.requestMIDIAccessFailure)):i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - initMidi() MIDI not supported"),i.initCallback(i)},this.requestMIDIAccessSuccess=function(e){for(var c of(i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Request MIDI Access Success"),i.logLevel>=jMidiAccessApi.LOG_LEVEL_ALL&&console.log("jMidiAccessApi - Request MIDI Access Success, midiAccess: ",i.midiAccess),i.midiAccess=e,i.midiAccess.onstatechange=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - State Change"),t.addAllOutputPorts(),i.deviceStateChangeCallback(e.port,i)},i.midiAccess.inputs.values()))s.push(c);t.initOutputPorts(),null!=i.onRequestMidiAccessSuccess&&i.onRequestMidiAccessSuccess(i)},this.requestMIDIAccessFailure=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - requestMIDIAccessFailure()"),null!=i.onRequestMIDIAccessFailure&&i.onRequestMIDIAccessFailure()},this.bindInputPort=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Bind Input Port: "+e.name),e&&null==e.onmidimessage&&(e.onmidimessage=this.receive,i.portConnectedCallback(e,i))},this.bindInputPortByName=function(e){var t=null;for(var s of i.midiAccess.inputs.values())s.name==e&&(t=s);this.bindInputPort(t)},this.unbindInputPort=function(e,t){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Unbind Input Port: "+t.name),t&&null!=t.onmidimessage&&(t.onmidimessage=null,i.portDisconnectedCallback(t,i))},this.unbindInputPortByName=function(e){var t=null,s=null;for(var c of i.midiAccess.inputs)for(var n of c.values())n.name==e&&(t=c,s=n);this.unbindInputPort(t,s)},this.initOutputPorts=function(){i.logLevel>=jMidiAccessApi.LOG_LEVEL_ALL&&console.log("jMidiAccessApi - initOutputPorts()"),this.addAllOutputPorts()},this.addAllOutputPorts=function(){for(var e of(i.logLevel>=jMidiAccessApi.LOG_LEVEL_ALL&&console.log("jMidiAccessApi - addAllOutputPorts()"),i.midiAccess.outputs.values()))this.addOutputPort(e)},this.addOutputPort=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Add OUTPUT port: "+e.name),this.outputPortExists(e)||i.outputPorts.push(new jMidiAccessApiPort({id:e.id,name:e.name,type:"output",connected:!1}))},this.getOutputPortIndexById=function(e){for(var t=0;t<i.outputPorts.length;t++){if(i.outputPorts[t].getId()==outputPort.id)return t}return-1},this.isOutputConnectedById=function(e){for(var t of i.outputPorts)if(t.getId()==e&&t.isConnected())return!0;return!1},this.outputPortExists=function(e){for(var t of i.outputPorts)if(t.getId()==e.id)return!0;return!1},this.connectOutputPortByName=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Connect OUTPUT port by name: "+e);for(var t=0;t<i.outputPorts.length;t++){var s=i.outputPorts[t];if(s.getName()==e)return i.outputPorts[t].setConnected(!0),i.portConnectedCallback(s,i),!0}return!1},this.disconnectOutputPortByName=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_DEBUG&&console.log("jMidiAccessApi - Disconnect OUTPUT port by name: "+e);for(var t=0;t<i.outputPorts.length;t++){var s=i.outputPorts[t];if(s.getName()==e)return i.outputPorts[t].setConnected(!1),i.portDisconnectedCallback(s,i),!0}return!1},this.receive=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_ALL&&console.log("jMidiAccessApi - Receive MIDIMessageEvent: ",e.data),i.receiveCallback(e)},this.send=function(e){i.logLevel>=jMidiAccessApi.LOG_LEVEL_ALL&&console.log("jMidiAccessApi - Send MIDIMessageEvent: ",e.data);const t=i.midiAccess.outputs.values();for(var s of t)this.isOutputConnectedById(s.id)&&s.send(e.data)},this.construct(e)},jMidiAccessApiPort=function(e){var i={id:!1,name:null,type:!1,connected:!1};this.construct=function(e){$.extend(i,e)},this.getId=function(){return i.id},this.getName=function(){return i.name},this.isConnected=function(){return i.connected},this.setConnected=function(e){i.connected=e},this.construct(e)};jMidiAccessApi.LOG_LEVEL_ERROR=0,jMidiAccessApi.LOG_LEVEL_INFO=1,jMidiAccessApi.LOG_LEVEL_WARNING=2,jMidiAccessApi.LOG_LEVEL_DEBUG=3,jMidiAccessApi.LOG_LEVEL_ALL=4;
 